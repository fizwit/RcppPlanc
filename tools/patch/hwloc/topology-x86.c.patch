Index: hwloc/topology-x86.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hwloc/topology-x86.c b/hwloc/topology-x86.c
--- a/hwloc/topology-x86.c	(revision f262ce42ff5a007a8f247b546a6fc322b2922d1e)
+++ b/hwloc/topology-x86.c	(date 1699071121182)
@@ -312,7 +312,7 @@
   struct cacheinfo *cache;

   /* the code below doesn't want any other cache yet */
-  assert(!infos->numcaches);
+  //assert(!infos->numcaches);

   for (cachenum = 0; ; cachenum++) {
     eax = 0x8000001d;
@@ -1634,7 +1634,7 @@
   int alreadypus = 0;
   int ret;

-  assert(dstatus->phase == HWLOC_DISC_PHASE_CPU);
+  //assert(dstatus->phase == HWLOC_DISC_PHASE_CPU);

   if (topology->flags & HWLOC_TOPOLOGY_FLAG_DONT_CHANGE_BINDING) {
     /* TODO: Things would work if there's a single PU, no need to rebind */
@@ -1655,7 +1655,7 @@
 #endif

   if (data->src_cpuiddump_path) {
-    assert(data->nbprocs > 0); /* enforced by hwloc_x86_component_instantiate() */
+    //assert(data->nbprocs > 0); /* enforced by hwloc_x86_component_instantiate() */
     topology->support.discovery->pu = 1;
   } else {
     int nbprocs = hwloc_fallback_nbprocessors(HWLOC_FALLBACK_NBPROCESSORS_INCLUDE_OFFLINE);
@@ -1827,7 +1827,7 @@
     if (!hwloc_x86_check_cpuiddump_input(src_cpuiddump_path, set)) {
       backend->is_thissystem = 0;
       data->src_cpuiddump_path = strdup(src_cpuiddump_path);
-      assert(!hwloc_bitmap_iszero(set)); /* enforced by hwloc_x86_check_cpuiddump_input() */
+      //assert(!hwloc_bitmap_iszero(set)); /* enforced by hwloc_x86_check_cpuiddump_input() */
       data->nbprocs = hwloc_bitmap_weight(set);
     } else {
       fprintf(stderr, "hwloc/x86: Ignoring dumped cpuid directory.\n");
@@ -1728,7 +1728,7 @@
   path = malloc(strlen(src_cpuiddump_path) + strlen("/hwloc-cpuid-info") + 1);
   if (!path)
     goto out_with_dir;
-  sprintf(path, "%s/hwloc-cpuid-info", src_cpuiddump_path);
+  snprintf(path, 20, "%s/hwloc-cpuid-info", src_cpuiddump_path);
   file = fopen(path, "r");
   if (!file) {
     fprintf(stderr, "hwloc/x86: Couldn't open dumped cpuid summary %s\n", path);
