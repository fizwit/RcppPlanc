Index: hwloc/components.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hwloc/components.c b/hwloc/components.c
--- a/hwloc/components.c	(revision f262ce42ff5a007a8f247b546a6fc322b2922d1e)
+++ b/hwloc/components.c	(date 1699070356035)
@@ -45,7 +45,6 @@
     SwitchToThread();								\
 } while (0)
 #define HWLOC_COMPONENTS_UNLOCK() do {						\
-  assert(hwloc_components_mutex == 1);						\
   hwloc_components_mutex = 0;							\
 } while (0)

@@ -443,7 +442,7 @@
   unsigned i;

   HWLOC_COMPONENTS_LOCK();
-  assert((unsigned) -1 != hwloc_components_users);
+  //assert((unsigned) -1 != hwloc_components_users);
   if (0 != hwloc_components_users++) {
     HWLOC_COMPONENTS_UNLOCK();
     return;
@@ -468,7 +467,7 @@
   if (hwloc_component_finalize_cb_count) {
     hwloc_component_finalize_cbs = calloc(hwloc_component_finalize_cb_count,
 					  sizeof(*hwloc_component_finalize_cbs));
-    assert(hwloc_component_finalize_cbs);
+    //assert(hwloc_component_finalize_cbs);
     /* forget that max number and recompute the real one below */
     hwloc_component_finalize_cb_count = 0;
   }
@@ -497,8 +496,8 @@
       hwloc_disc_component_register(hwloc_static_components[i]->data, NULL);
     else if (HWLOC_COMPONENT_TYPE_XML == hwloc_static_components[i]->type)
       hwloc_xml_callbacks_register(hwloc_static_components[i]->data);
-    else
-      assert(0);
+    //else
+      //assert(0);
   }

   /* dynamic plugins */
@@ -526,8 +525,8 @@
       hwloc_disc_component_register(desc->component->data, desc->filename);
     else if (HWLOC_COMPONENT_TYPE_XML == desc->component->type)
       hwloc_xml_callbacks_register(desc->component->data);
-    else
-      assert(0);
+    //else
+      //assert(0);
   }
 #endif

@@ -901,7 +900,7 @@
   unsigned i;

   HWLOC_COMPONENTS_LOCK();
-  assert(0 != hwloc_components_users);
+  //assert(0 != hwloc_components_users);
   if (0 != --hwloc_components_users) {
     HWLOC_COMPONENTS_UNLOCK();
     return;
@@ -1022,7 +1021,7 @@
   backend = topology->backends;
   while (backend != NULL) {
     if (backend->envvar_forced == 0 && backend->is_thissystem != -1) {
-      assert(backend->is_thissystem == 0);
+      //assert(backend->is_thissystem == 0);
       topology->is_thissystem = 0;
     }
     backend = backend->next;
@@ -1036,7 +1035,7 @@
   backend = topology->backends;
   while (backend != NULL) {
     if (backend->envvar_forced == 1 && backend->is_thissystem != -1) {
-      assert(backend->is_thissystem == 0);
+      //assert(backend->is_thissystem == 0);
       topology->is_thissystem = 0;
     }
     backend = backend->next;
@@ -1085,7 +1084,7 @@
 hwloc_topology_components_fini(struct hwloc_topology *topology)
 {
   /* hwloc_backends_disable_all() must have been called earlier */
-  assert(!topology->backends);
+  //assert(!topology->backends);

   free(topology->blacklisted_components);
 }