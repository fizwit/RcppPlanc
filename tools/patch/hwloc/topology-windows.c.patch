Index: hwloc/topology-windows.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hwloc/topology-windows.c b/hwloc/topology-windows.c
--- a/hwloc/topology-windows.c	(revision f262ce42ff5a007a8f247b546a6fc322b2922d1e)
+++ b/hwloc/topology-windows.c	(date 1702067196385)
@@ -216,9 +216,9 @@
 {
   HMODULE kernel32, ntdll;
 
-#if HWLOC_HAVE_GCC_W_CAST_FUNCTION_TYPE
-#pragma GCC diagnostic ignored "-Wcast-function-type"
-#endif
+// #if HWLOC_HAVE_GCC_W_CAST_FUNCTION_TYPE
+// #pragma GCC diagnostic ignored "-Wcast-function-type"
+// #endif
 
     kernel32 = LoadLibrary("kernel32.dll");
     if (kernel32) {
@@ -257,9 +257,9 @@
     ntdll = GetModuleHandle("ntdll");
     RtlGetVersionProc = (PFN_RTLGETVERSION) GetProcAddress(ntdll, "RtlGetVersion");
 
-#if HWLOC_HAVE_GCC_W_CAST_FUNCTION_TYPE
-#pragma GCC diagnostic warning "-Wcast-function-type"
-#endif
+// #if HWLOC_HAVE_GCC_W_CAST_FUNCTION_TYPE
+// #pragma GCC diagnostic warning "-Wcast-function-type"
+// #endif
 }
 
 /*
@@ -366,8 +366,8 @@
   hwloc_debug("found %lu windows processor groups\n", nr_processor_groups);
 
   if (nr_processor_groups > 1 && SIZEOF_VOID_P == 4) {
-    if (HWLOC_SHOW_ALL_ERRORS())
-      fprintf(stderr, "hwloc/windows: multiple processor groups found on 32bits Windows, topology may be invalid/incomplete.\n");
+    // if (HWLOC_SHOW_ALL_ERRORS())
+    //  fprintf(stderr, "hwloc/windows: multiple processor groups found on 32bits Windows, topology may be invalid/incomplete.\n");
   }
 
   length = 0;
@@ -987,7 +987,7 @@
   OSVERSIONINFOEX osvi;
   char versionstr[20];
   char hostname[122] = "";
-  unsigned hostname_size = sizeof(hostname);
+  long unsigned hostname_size = sizeof(hostname);
   int has_efficiencyclass = 0;
   struct hwloc_win_efficiency_classes eclasses;
   char *env = getenv("HWLOC_WINDOWS_PROCESSOR_GROUP_OBJS");
@@ -1107,7 +1107,7 @@
 
 	      set = hwloc_bitmap_alloc();
 	      mask = procInfo->Group.GroupInfo[id].ActiveProcessorMask;
-	      hwloc_debug("group %u %d cpus mask %lx\n", id,
+	      hwloc_debug("group %u %d cpus mask %llx\n", id,
 			  procInfo->Group.GroupInfo[id].ActiveProcessorCount, mask);
 	      /* KAFFINITY is ULONG_PTR */
 	      hwloc_bitmap_set_ith_ULONG_PTR(set, id, mask);
@@ -1144,7 +1144,7 @@
 	obj = hwloc_alloc_setup_object(topology, type, id);
         obj->cpuset = hwloc_bitmap_alloc();
         for (i = 0; i < num; i++) {
-          hwloc_debug("%s#%u %d: mask %d:%lx\n", hwloc_obj_type_string(type), id, i, GroupMask[i].Group, GroupMask[i].Mask);
+          hwloc_debug("%s#%u %d: mask %d:%llx\n", hwloc_obj_type_string(type), id, i, GroupMask[i].Group, GroupMask[i].Mask);
 	  /* GROUP_AFFINITY.Mask is KAFFINITY, which is ULONG_PTR */
 	  hwloc_bitmap_set_ith_ULONG_PTR(obj->cpuset, GroupMask[i].Group, GroupMask[i].Mask);
 	  /* FIXME: scale id to id*8/sizeof(ULONG_PTR) as above? */
@@ -1279,7 +1279,7 @@
       hwloc_obj_add_info(topology->levels[0][0], "OSRelease", "Vista"); /* or "Server 2008" */
   } /* earlier versions are ignored */
 
-  snprintf(versionstr, sizeof(versionstr), "%u.%u.%u", osvi.dwMajorVersion, osvi.dwMinorVersion, osvi.dwBuildNumber);
+  snprintf(versionstr, sizeof(versionstr), "%lu.%lu.%lu", osvi.dwMajorVersion, osvi.dwMinorVersion, osvi.dwBuildNumber);
   hwloc_obj_add_info(topology->levels[0][0], "OSVersion", versionstr);
 
 #if !defined(__CYGWIN__)
