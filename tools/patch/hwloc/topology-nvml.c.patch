Subject: [PATCH] topology-nvml.c.patch
---
Index: hwloc/topology-nvml.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hwloc/topology-nvml.c b/hwloc/topology-nvml.c
--- a/hwloc/topology-nvml.c	(revision f262ce42ff5a007a8f247b546a6fc322b2922d1e)
+++ b/hwloc/topology-nvml.c	(date 1699470705646)
@@ -41,9 +41,9 @@
     /* we need PCI devices to be filtered-in */
     if (pfilter != HWLOC_TYPE_FILTER_KEEP_NONE) {
       static int warned = 0;
-      if (!warned && HWLOC_SHOW_ALL_ERRORS())
-        fprintf(stderr, "hwloc/nvml: failed to find NVLink peer %04x:%02x:%02x\n",
-                peer_bdf.domain, peer_bdf.bus, peer_bdf.device);
+      // if (!warned && HWLOC_SHOW_ALL_ERRORS())
+        // fprintf(stderr, "hwloc/nvml: failed to find NVLink peer %04x:%02x:%02x\n",
+        //        peer_bdf.domain, peer_bdf.bus, peer_bdf.device);
       warned = 1;
     } else {
       static int warned = 0;
@@ -89,10 +89,10 @@
   }
   default: {
     static int warned = 0;
-    if (!warned && HWLOC_SHOW_ALL_ERRORS())
-      fprintf(stderr, "hwloc/nvml: failed to recognize NVLink peer %04x:%02x:%02x class %04x vendor %04x device %04x\n",
-              peer_bdf.domain, peer_bdf.bus, peer_bdf.device,
-              obj->attr->pcidev.class_id, obj->attr->pcidev.vendor_id, obj->attr->pcidev.device_id);
+    // if (!warned && HWLOC_SHOW_ALL_ERRORS())
+    //  fprintf(stderr, "hwloc/nvml: failed to recognize NVLink peer %04x:%02x:%02x class %04x vendor %04x device %04x\n",
+    //          peer_bdf.domain, peer_bdf.bus, peer_bdf.device,
+    //          obj->attr->pcidev.class_id, obj->attr->pcidev.vendor_id, obj->attr->pcidev.device_id);
     warned = 1;
     return NULL;
   }
@@ -177,10 +177,10 @@
 
   ret = nvmlInit();
   if (NVML_SUCCESS != ret) {
-    if (HWLOC_SHOW_ALL_ERRORS()) {
-      const char *error = nvmlErrorString(ret);
-      fprintf(stderr, "hwloc/nvml: Failed to initialize with nvmlInit(): %s\n", error);
-    }
+    //if (HWLOC_SHOW_ALL_ERRORS()) {
+    //  const char *error = nvmlErrorString(ret);
+    //  fprintf(stderr, "hwloc/nvml: Failed to initialize with nvmlInit(): %s\n", error);
+    //}
     return -1;
   }
   ret = nvmlDeviceGetCount(&nb);
@@ -366,8 +366,8 @@
           bw = 25000; /* multiple links may connect same GPUs */
         } else {
           static int warned = 0;
-          if (!warned && HWLOC_SHOW_ALL_ERRORS())
-            fprintf(stderr, "hwloc/nvml: Failed to recognize NVLink version %u\n", version);
+          // if (!warned && HWLOC_SHOW_ALL_ERRORS())
+          //  fprintf(stderr, "hwloc/nvml: Failed to recognize NVLink version %u\n", version);
           warned = 1;
           continue;
         }
